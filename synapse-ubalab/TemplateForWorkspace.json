{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "synapse-ubalab"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSynapseAnalyticsUba_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalyticsUba'"
		},
		"synapse-ubalab-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synapse-ubalab-WorkspaceDefaultSqlServer'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakestorageubalab.dfs.core.windows.net"
		},
		"synapse-ubalab-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://synapsedatalakubalab.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/DeltaToDelta')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "DeltaToDelta",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeltaCopy",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"deltaIn": {},
									"deltaOut": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/DeltaCopy')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DeltaToSQLOnDemand')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "DeltaToSQLOnDemand",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeltaToSQLOnDemand",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"creditcardDeltaIn": {},
									"creditCardSQLOnDemandOut": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "synapse-ubalab-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/DeltaToSQLOnDemand')]",
				"[concat(variables('workspaceId'), '/linkedServices/synapse-ubalab-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalyticsCreditCardTable')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalyticsUba",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "transactions"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalyticsUba')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalyticsUba')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalyticsUba_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-ubalab-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapse-ubalab-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-ubalab-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('synapse-ubalab-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DeltaCopy')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AzureDataLakeStorage1",
								"type": "LinkedServiceReference"
							},
							"name": "deltaIn"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "synapse-ubalab-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "deltaOut"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Time as float,",
						"          V1 as float,",
						"          V2 as float,",
						"          V3 as float,",
						"          V4 as float,",
						"          V5 as float,",
						"          V6 as float,",
						"          V7 as float,",
						"          V8 as float,",
						"          V9 as float,",
						"          V10 as float,",
						"          V11 as float,",
						"          V12 as float,",
						"          V13 as float,",
						"          V14 as float,",
						"          V15 as float,",
						"          V16 as float,",
						"          V17 as float,",
						"          V18 as float,",
						"          V19 as float,",
						"          V20 as float,",
						"          V21 as float,",
						"          V22 as float,",
						"          V23 as float,",
						"          V24 as float,",
						"          V25 as float,",
						"          V26 as float,",
						"          V27 as float,",
						"          V28 as float,",
						"          amount as float,",
						"          class as integer,",
						"          id as string,",
						"          name as string,",
						"          state as string,",
						"          alpha2 as string,",
						"          lon as float,",
						"          lat as float,",
						"          companyen as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delta',",
						"     fileSystem: 'deltalake-container',",
						"     folderPath: 'CreditCard') ~> deltaIn",
						"deltaIn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'delta',",
						"     folderPath: 'creditcard',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> deltaOut"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]",
				"[concat(variables('workspaceId'), '/linkedServices/synapse-ubalab-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DeltaToSQLOnDemand')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "synapse-ubalab-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "creditcardDeltaIn"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsCreditCardTable",
								"type": "DatasetReference"
							},
							"name": "creditCardSQLOnDemandOut"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Time as float,",
						"          V1 as float,",
						"          V2 as float,",
						"          V3 as float,",
						"          V4 as float,",
						"          V5 as float,",
						"          V6 as float,",
						"          V7 as float,",
						"          V8 as float,",
						"          V9 as float,",
						"          V10 as float,",
						"          V11 as float,",
						"          V12 as float,",
						"          V13 as float,",
						"          V14 as float,",
						"          V15 as float,",
						"          V16 as float,",
						"          V17 as float,",
						"          V18 as float,",
						"          V19 as float,",
						"          V20 as float,",
						"          V21 as float,",
						"          V22 as float,",
						"          V23 as float,",
						"          V24 as float,",
						"          V25 as float,",
						"          V26 as float,",
						"          V27 as float,",
						"          V28 as float,",
						"          amount as float,",
						"          class as integer,",
						"          id as string,",
						"          name as string,",
						"          state as string,",
						"          alpha2 as string,",
						"          lon as float,",
						"          lat as float,",
						"          companyen as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delta',",
						"     fileSystem: 'delta') ~> creditcardDeltaIn",
						"creditcardDeltaIn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError') ~> creditCardSQLOnDemandOut"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-ubalab-WorkspaceDefaultStorage')]",
				"[concat(variables('workspaceId'), '/datasets/AzureSynapseAnalyticsCreditCardTable')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CreateCreditCardDB')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE DATABASE creditcard2\n\nCREATE USER [synapse-ubalab] FROM EXTERNAL PROVIDER;\nALTER ROLE db_datareader ADD MEMBER [synapse-ubalab];\nALTER ROLE db_datawriter ADD MEMBER [synapse-ubalab];\nALTER ROLE db_ddladmin ADD MEMBER [synapse-ubalab];\nGO\n\nCREATE LOGIN [synapse-ubalab] FROM EXTERNAL PROVIDER;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "creditcard",
						"poolName": "Built-in"
					},
					"resultLimit": -1
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'delta_synapsedatalakubalab_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [delta_synapsedatalakubalab_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://delta@synapsedatalakubalab.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE transactions (\n\t[Time] real,\n\t[V1] real,\n\t[V2] real,\n\t[V3] real,\n\t[V4] real,\n\t[V5] real,\n\t[V6] real,\n\t[V7] real,\n\t[V8] real,\n\t[V9] real,\n\t[V10] real,\n\t[V11] real,\n\t[V12] real,\n\t[V13] real,\n\t[V14] real,\n\t[V15] real,\n\t[V16] real,\n\t[V17] real,\n\t[V18] real,\n\t[V19] real,\n\t[V20] real,\n\t[V21] real,\n\t[V22] real,\n\t[V23] real,\n\t[V24] real,\n\t[V25] real,\n\t[V26] real,\n\t[V27] real,\n\t[V28] real,\n\t[amount] real,\n\t[class] int,\n\t[id] nvarchar(4000),\n\t[name] nvarchar(4000),\n\t[state] nvarchar(4000),\n\t[alpha2] nvarchar(4000),\n\t[lon] real,\n\t[lat] real,\n\t[companyen] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'creditcard/**',\n\tDATA_SOURCE = [delta_synapsedatalakubalab_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM cc.transactions\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "creditcard",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [Time]\n,[V1]\n,[V2]\n,[V3]\n,[V4]\n,[V5]\n,[V6]\n,[V7]\n,[V8]\n,[V9]\n,[V10]\n,[V11]\n,[V12]\n,[V13]\n,[V14]\n,[V15]\n,[V16]\n,[V17]\n,[V18]\n,[V19]\n,[V20]\n,[V21]\n,[V22]\n,[V23]\n,[V24]\n,[V25]\n,[V26]\n,[V27]\n,[V28]\n,[amount]\n,[class]\n,[id]\n,[name]\n,[state]\n,[alpha2]\n,[lon]\n,[lat]\n,[companyen]\n FROM [dbo].[transactions]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "creditcard",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks",
			"apiVersion": "2019-06-01-preview",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/AzureDataLakeStorage752')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/9d46754e-1a5d-4594-a51a-b97a2b5e8fc9/resourceGroups/ubalab/providers/Microsoft.Storage/storageAccounts/datalakestorageubalab",
				"groupId": "dfs"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-custstgacct--synapse-ubalab-synapsedatalakubalab')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/9d46754e-1a5d-4594-a51a-b97a2b5e8fc9/resourceGroups/ubalab/providers/Microsoft.Storage/storageAccounts/synapsedatalakubalab",
				"groupId": "dfs"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-sql--synapse-ubalab')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/9d46754e-1a5d-4594-a51a-b97a2b5e8fc9/resourceGroups/ubalab/providers/Microsoft.Synapse/workspaces/synapse-ubalab",
				"groupId": "sql",
				"fqdns": [
					"synapse-ubalab.14c4d47f-5cc2-4c06-92e3-b95dac29eb11.sql.azuresynapse.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-sqlOnDemand--synapse-ubalab')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/9d46754e-1a5d-4594-a51a-b97a2b5e8fc9/resourceGroups/ubalab/providers/Microsoft.Synapse/workspaces/synapse-ubalab",
				"groupId": "sqlOnDemand",
				"fqdns": [
					"synapse-ubalab-ondemand.14c4d47f-5cc2-4c06-92e3-b95dac29eb11.sql.azuresynapse.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}